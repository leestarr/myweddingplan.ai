rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Chat messages rules
    match /chat_messages/{messageId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Vendors collection rules
    match /vendors/{vendorId} {
      allow read: if true;  // Allow public reading of vendors
      allow write: if request.auth != null;  // Only authenticated users can write
    }
    
    match /vendorReviews/{reviewId} {
      allow read: if true;  // Allow public reading of reviews
      allow write: if request.auth != null;  // Only authenticated users can write
    }
    
    match /vendorBookings/{bookingId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||  // User can read their own bookings
        resource.data.vendorId in get(/databases/$(database)/documents/vendors/$(request.auth.uid)).data.vendorIds  // Vendor can read their bookings
      );
      allow write: if request.auth != null;  // Only authenticated users can write
    }
    
    // Existing rules for other collections
    match /tasks/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /guests/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /tables/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /settings/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /budgets/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /expenses/{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}

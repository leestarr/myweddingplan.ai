rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    // Default rule - deny all access unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }

    // Wedding dates
    match /wedding_dates/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Budget and expenses
    match /budgets/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    match /expenses/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    // Guests and tables
    match /guests/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    match /tables/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    // Tasks
    match /tasks/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    // Settings
    match /settings/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Vendor bookings
    match /vendorBookings/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    // Quotes
    match /quotes/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    // Public collections
    match /vendors/{vendorId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isAdmin();
    }

    match /forum_posts/{postId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && 
        (resource.data.authorId == request.auth.uid || isAdmin());
    }
    
    match /forum_comments/{commentId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && 
        (resource.data.authorId == request.auth.uid || isAdmin());
    }
  }
}

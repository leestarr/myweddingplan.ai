rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default rule - require authentication for all operations unless specified otherwise
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Forum posts rules
    match /forum_posts/{postId} {
      allow read: if true;  // Anyone can read posts
      allow create: if request.auth != null;  // Only authenticated users can create
      allow update, delete: if request.auth != null && 
        (resource.data.authorId == request.auth.uid ||  // Author can update/delete
         request.auth.token.admin == true);  // Admins can update/delete
    }
    
    // Forum comments rules
    match /forum_comments/{commentId} {
      allow read: if true;  // Anyone can read comments
      allow create: if request.auth != null;  // Only authenticated users can create
      allow update, delete: if request.auth != null && 
        (resource.data.authorId == request.auth.uid ||  // Author can update/delete
         request.auth.token.admin == true);  // Admins can update/delete
    }

    // Wedding date collection
    match /wedding_dates/{userId} {
      allow read, write: if request.auth != null;
    }

    // Budget and expenses rules
    match /budgets/{budgetId} {
      allow read, write: if request.auth != null;
    }

    match /expenses/{expenseId} {
      allow read, write: if request.auth != null;
    }

    // Vendors collection rules
    match /vendors/{vendorId} {
      allow read: if true;  // Allow public reading of vendors
      allow write: if request.auth != null;  // Only authenticated users can write
    }
    
    match /vendorReviews/{reviewId} {
      allow read: if true;  // Allow public reading of reviews
      allow write: if request.auth != null;  // Only authenticated users can write
    }
    
    match /vendorBookings/{bookingId} {
      allow read, write: if request.auth != null;
    }

    // Guest and table management
    match /guests/{guestId} {
      allow read, write: if request.auth != null;
    }

    match /tables/{tableId} {
      allow read, write: if request.auth != null;
    }

    // User settings
    match /settings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Store listings
    match /store_listings/{listingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.data.sellerId == request.auth.uid ||
         request.auth.token.admin == true);
    }

    // Tasks
    match /tasks/{taskId} {
      allow read, write: if request.auth != null;
    }
  }
}
